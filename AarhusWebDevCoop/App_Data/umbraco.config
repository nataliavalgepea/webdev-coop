<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE root [<!ELEMENT message ANY>
<!ATTLIST message id ID #REQUIRED>
<!ELEMENT members ANY>
<!ATTLIST members id ID #REQUIRED>
<!ELEMENT messageBoard ANY>
<!ATTLIST messageBoard id ID #REQUIRED>
<!ELEMENT master ANY>
<!ATTLIST master id ID #REQUIRED>
<!ELEMENT homePage ANY>
<!ATTLIST homePage id ID #REQUIRED>
<!ELEMENT textPage ANY>
<!ATTLIST textPage id ID #REQUIRED>
<!ELEMENT articlesMain ANY>
<!ATTLIST articlesMain id ID #REQUIRED>
<!ELEMENT articlesItem ANY>
<!ATTLIST articlesItem id ID #REQUIRED>
<!ELEMENT projectsMain ANY>
<!ATTLIST projectsMain id ID #REQUIRED>
<!ELEMENT projectsItem ANY>
<!ATTLIST projectsItem id ID #REQUIRED>
<!ELEMENT contactPage ANY>
<!ATTLIST contactPage id ID #REQUIRED>
<!ELEMENT comment ANY>
<!ATTLIST comment id ID #REQUIRED>
]>
<root id="-1">
  <homePage id="1060" key="4974fba4-4d3a-4954-9e29-5c9428bb7e3b" parentID="-1" level="1" creatorID="0" sortOrder="0" createDate="2016-09-05T11:07:05" updateDate="2016-10-12T21:37:07" nodeName="Home page" urlName="home-page" path="-1,1060" isDoc="" nodeType="1054" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1053" nodeTypeAlias="homePage">
    <metaDescription><![CDATA[Home page meta description]]></metaDescription>
    <metaKeywords><![CDATA[Home page keywords]]></metaKeywords>
    <umbracoNaviHide>0</umbracoNaviHide>
    <siteTitle><![CDATA[Aarhus Web Development Network]]></siteTitle>
    <mainContent><![CDATA[<p>We only include the very best and most useful tools and articles from the design community. Resources that will give you the toolkit and skillset to offer and deliver better solutions to your clients that will hopefully result in a more profitable business for you.</p>
<p>If you’re a freelance web designer, then our site has been developed specifically for you.</p>
<p><span>If you are a web or mobile designer/developer, graphic designer or even an experienced blogger, perhaps you would like to share some of your knowledge and expertise with the readers of <strong>A</strong></span><strong>WD</strong><span>.</span></p>]]></mainContent>
    <footer><![CDATA[AarhusWebDevCoop 2016]]></footer>
    <articlesMain id="1080" key="ca2e159d-54c1-4c8b-bae1-52a4d8813c3e" parentID="1060" level="2" creatorID="0" sortOrder="0" createDate="2016-09-05T11:37:01" updateDate="2016-10-12T21:19:52" nodeName="Articles" urlName="articles" path="-1,1060,1080" isDoc="" nodeType="1064" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1063" nodeTypeAlias="articlesMain">
      <umbracoNaviHide>0</umbracoNaviHide>
      <articlesTitle><![CDATA[UI articles]]></articlesTitle>
      <articlesBodyText><![CDATA[<p><span>Here you will find articles, tutorials and resources covering all areas of web design. Topics include CSS, HTML, Javascript &amp; jQuery, responsive techniques &amp; resources, GUI resources, templates, web frameworks, and much more.</span></p>]]></articlesBodyText>
      <articlesItem id="1081" key="bfe3936f-fabd-4e8a-a5a6-719aa2a6fd42" parentID="1080" level="3" creatorID="0" sortOrder="0" createDate="2016-09-05T11:38:53" updateDate="2016-10-12T20:49:39" nodeName="Guidelines For Better Client Feedback on Web Design" urlName="guidelines-for-better-client-feedback-on-web-design" path="-1,1060,1080,1081" isDoc="" nodeType="1068" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1067" nodeTypeAlias="articlesItem">
        <umbracoNaviHide>0</umbracoNaviHide>
        <articleTitle><![CDATA[Guidelines For Better Client Feedback on Web Design]]></articleTitle>
        <articleContents><![CDATA[<p>Designers who succeed in presenting their designs successfully do two things better than other designers.<strong>First</strong>, they understand that their clients are not designers and communicate with them using normal words and not words reserved for designers.<strong>Secondly</strong>, they invite their clients to collaborate on the design. Not by asking them to create mockups, but by asking the right questions and inviting them to an open discussion.</p>
<p>Yet, A LOT of designers insists on using words that are mumbo-jumbo to the ears of their clients when talking about design solutions.</p>
<p>In this article, I’ll share four guidelines that will help you get better and more actionable client feedback.</p>
<p> </p>
<h2>Make Sure Your Client Gives Feedback from Their Audience Point-Of-View</h2>
<p>Talking to people who are not designers using words exclusive to design makes people feel threatened (and even stupid). That’s not a good way to start a relationship with your clients (or anyone!)</p>
<p><img src="/media/1004/client-feedback-01.jpg?width=500&amp;height=395" alt="" rel="1129" data-id="1129" /></p>
<p>The direct result is that, during the project, many of your clients will give you feedback based on their preferences and their personal taste. And you know what? It’s your fault. You never gave them a chance. What you need to do is find a common base.</p>
<p>And the best base, is focusing on the goals of what you’re trying to create. The easiest way to go about this is thinking like your target audience. So tell your client that when they’re reviewing your mockups and your drafts, their job is to put themselves in the shoes of their audience and think about <a href="https://speckyboy.com/determining-the-real-wants-of-your-client/">what their wants and needs are</a>.</p>
<p>It goes without saying that, who the target audience is, should be defined before you embark on any design phase.</p>
<p>It’s a surprisingly effective guideline.</p>
<p>Now, most of your clients will have to be reminded about this. It’s easy to fall back into personal taste. When that happens, gently nudge them back on giving feedback that takes their audience point-of-view rather than their personal taste:</p>
<p>“<em>Ok, I understand that you want to use more classical typography here. Do you think that’s true for the people who’ll be using your website as well?</em>“</p>]]></articleContents>
      </articlesItem>
      <articlesItem id="1082" key="cbb30a74-c002-4032-bb11-12f04bbedc46" parentID="1080" level="3" creatorID="0" sortOrder="1" createDate="2016-09-05T11:39:43" updateDate="2016-10-12T20:52:53" nodeName="Common Mistakes When Presenting Design Ideas to Clients, and How to Avoid Them" urlName="common-mistakes-when-presenting-design-ideas-to-clients-and-how-to-avoid-them" path="-1,1060,1080,1082" isDoc="" nodeType="1068" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1067" nodeTypeAlias="articlesItem">
        <umbracoNaviHide>0</umbracoNaviHide>
        <articleTitle><![CDATA[Common Mistakes When Presenting Design Ideas to Clients, and How to Avoid Them]]></articleTitle>
        <articleContents><![CDATA[<p>You’ve spent weeks working on a client design, churned through the requisite nine terrible designs to get to that lone good one, tested iterations with the team and with your friends as willing (or maybe unwilling) guinea pigs, and you’ve got the perfect web design solution for the brief. Then you present it to the client, and you screw up. Sound familiar?</p>
<p>You’re not alone. Presenting designs to clients is one of the toughest skills to master in the designer’s toolkit, and more than a few newbies struggle. Clients and designers come into presentation meeting with different perspectives, expectations, and languages – it’s no surprise that miscommunications and misunderstandings arise.</p>
<p>That’s why strong design presentation skills are essential to the success of a client design project; there’s no point in creating stellar designs if they never get approval because your presenting skills are off fleek.</p>
<p>While hard-earned experience is probably the best teacher of good design presentation skills, some of the most common mistakes can be avoided with a little preparation and a bit more confidence. Here are three common mistakes made by rookie designer-presenters, and how to avoid them.</p>
<p><img src="/media/1005/common-mistakes-when-presenting-design-ideas-clients-01.jpg?width=500&amp;height=253.84615384615387" alt="" rel="1130" data-id="1130" /></p>
<h2>Mistake 1: Giving Aesthetics Priority over Performance</h2>
<p>This is an easy trap to fall into – after all, you sweated over those pixels to get just the right mix of gradient, texture and all round brilliance into the interface, plus that new color scheme complements the information architecture to perfection. You should point all of that out, right? Wrong.</p>
<p>The biggest mistake designers make is walking their client through every visual feature of the interface. For a start, they can already see what’s on the screen, no need to point it all out and waste their time; second, they’re not a designer and the aesthetic, for them, is secondary. The client cares about performance; they care about whether this design will help them meet their business goals.</p>
<h3>The Solution</h3>
<p>If you find yourself going on a walk through each pixel, stop and think. Your aim is to explain <em>why</em> this design is the best solution for the project brief, not <em>what</em> the design contains. Explain how the design fits in with business objectives. Make sure to have actual data to back up your assertions by split testing different <a href="https://www.justinmind.com/" target="_blank">prototyped designs</a> and collecting the results – once a client sees numbers justifying why you’ve chosen a certain feature they’ll be much more likely to buy into the project.</p>
<p>And you’ll feel more confident presenting if you walk in there with objectively collected data and a reason for every decision made, rather than a script about how pretty you made the interface.</p>
<h2>Mistake 2: Presenting Without a High Fidelity Prototype</h2>
<p>A prototype is worth 1000 words. It’s also worth at least 1000 client meetings where you try to explain the design concept with nothing more than words and post-it notes. For clients with little or no experience in web design, understanding rough wireframes or paper prototype walkthroughs is difficult – they won’t be versed in the interface vocabulary you’re be used to, and their ability to mentally map out architecture and navigation patterns will be limited. And the last thing you want to do is put a client in the position of feeling dumb.</p>
<h3>The Solution</h3>
<p>High fidelity prototypes are a great way to bridge the gap between designer and client. Going in with a dynamic prototype means you’ll have an interactive interface solution with which you can painlessly demonstrate the context and functionality of the design.</p>
<p>If this is the first time working with a client, it’s often a good idea to produce a <a href="http://alistapart.com/blog/post/content-first-design" target="_blank">content-first prototype</a> so you can start to get feedback on brand voice and feel early on, as well as avoiding confusion over generic<em>lorem ipsum</em>. Whatever prototyping method you go for, presenting a flawless prototype will get your clients excited about the project and boost your credibility as a designer.</p>
<p>If you’re not sure which prototyping tool is best for your particular project, check out Cooper’s interactive <a href="https://www.cooper.com/prototyping-tools" target="_blank">list of the top tools</a> or this smaller, <a href="https://speckyboy.com/7-useful-prototyping-tools-websites-mobile-apps/">indepth selection</a>.</p>
<h2>Mistake 3: Only Presenting One Design</h2>
<p>We get it – time and resources are tight, and who wants to create a ton of designs just to have them junked at first sight by the client? The thing is, as Design and Brand Strategist Dave Holston points out, only design legends have the luxury of <a href="https://www.linkedin.com/pulse/5-rules-presenting-design-concepts-clients-dave-holston" target="_blank">presenting one design idea</a>; the rest of us mortals should adhere to the ‘Rule of Three.’</p>
<h3>The Solution</h3>
<p>The Rule of Three is pretty simple. Instead of presenting one design at a time and having the client shoot it down, you present three in one client meeting. You need to bring to the table, according to Dave:</p>
<ul>
<li>Client orientated design: the one that follows the brief to the letter but is pretty boring, to be honest.</li>
<li>Designer orientated design: the one you love and <em>know</em> is the better solution to the business problem wrapped up in the brief.</li>
<li>‘Wow!’ design: something completely out of leftfield that, for whatever reason, just <em>works</em>.</li>
</ul>
<p>The client will probably reject this option, but having the wow design in there makes it more likely <a href="https://www.jeremysaid.com/blog/customers-will-choose-middle-offer/" target="_blank">they’ll go for the middle choice</a>, which of course is the designer orientated design. Good presenting is about making basic psychology work for you.</p>
<h2>Presenting Designs to Clients – the Takeaway</h2>
<p>A strong design presentation meeting can make the difference between a project that fails and a project that succeeds. The client is paying you to be an expert, so don’t be afraid to be your most professional – leverage data, evidence, prototypes and a little bit of psychology to establish your authority and advocate for your best design. The client will thank you for it in the long run.</p>
<p>Just in case you’re wondering… <a href="https://speckyboy.com/wireframing-prototyping-mockuping-whats-the-difference/">Wireframing, Prototyping, Mockuping – What’s the Difference?</a></p>]]></articleContents>
      </articlesItem>
    </articlesMain>
    <projectsMain id="1083" key="9eb49f16-7ff4-4840-8f14-84639a9c8ce5" parentID="1060" level="2" creatorID="0" sortOrder="1" createDate="2016-09-05T11:41:21" updateDate="2016-09-18T15:59:04" nodeName="Our Projects" urlName="our-projects" path="-1,1060,1083" isDoc="" nodeType="1072" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1071" nodeTypeAlias="projectsMain">
      <projectsTitle><![CDATA[Projects Page Title]]></projectsTitle>
      <projectsBodyText><![CDATA[<p>Projects Page Description </p>]]></projectsBodyText>
      <projectsItem id="1084" key="701ebdd4-d362-471b-b8cd-0ff78be59a5a" parentID="1083" level="3" creatorID="0" sortOrder="0" createDate="2016-09-05T11:42:30" updateDate="2016-10-12T21:28:29" nodeName="Perfect Project Pitch" urlName="perfect-project-pitch" path="-1,1060,1083,1084" isDoc="" nodeType="1076" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1075" nodeTypeAlias="projectsItem">
        <umbracoNaviHide>0</umbracoNaviHide>
        <projectContents><![CDATA[<p>Freelancing offers you maximum flexibility to <a href="https://speckyboy.com/growing-your-design-business-the-right-way/">choose the projects</a> that best compliment your skills, <a href="https://speckyboy.com/including-your-personal-passions-in-your-design-work/">passions</a>and interests. Without a doubt, this is one of the most distinct advantages of becoming a freelancer.</p>
<p>However, in this economic climate the ability to only choose the projects that most attract you must take a back seat, and you should rather spend your efforts on presenting yourself professionally to all clients and projects that come your way in order to ensure that you maintain a constant project flow and income.</p>
<p>This makes the task of submitting a proposal and presenting your services professionally more important than ever. The need to <a href="https://speckyboy.com/from-zero-to-thriving-career-getting-clients-as-a-new-designer/">convince potential clients</a> of your skills and to stand out from the competition will be absolutely vital to your chances of succeeding as a freelancer, but what are the most important aspects of landing those lucrative projects?</p>
<p>Creating the perfect project pitch.</p>
<p><img style="width: 500px; height:246px;" src="/media/1009/perfect-project-pitch-a-01.jpg?width=500&amp;height=246" alt="" rel="1134" data-id="1134" /></p>
<h2>First Impressions Count</h2>
<p>If you are a member of an <a href="https://speckyboy.com/finding-freelance-design-work/">online job platform</a>, then you may receive many notifications of potential jobs that fit your skills, however with all of these job opportunities the first approach to the customer will be crucial to your success. You mustn’t treat the potential project as simply another project.</p>
<p>You should instead create a truly original proposal and send a <a href="https://speckyboy.com/2015/03/11/7-things-to-think-about-before-setting-your-freelance-rates/">unique offer to the customer</a>. This is vital as it is likely that many other freelancers will also be submitting their proposals to this project, meaning the customer will be inundated with offers. So the trick for you is to stand out and catch the attention of the client.</p>
<p>Here are a few points that you should include within your application:</p>
<ul>
<li>Outline how your specific expertise is relevant to the project. For example, if the project requires the skills of a web designer, then specifically list your experience and previous working history in this specific field.</li>
<li>Take time to suggest a concrete outcome to the project to let the customer know that are already visualizing how the project will turn out.</li>
<li>If needs be, contact the customer for further details of their project. This will both enable you to submit a higher quality application and will also signal your passion and interest for the project.</li>
</ul>
<h2>Treat the Client as a Human Being</h2>
<p>The most obvious sign for a client that you have not taken the time to submit a personal application would be if you were to simply address them as “Dear Sir/Madam” in your proposal. Try to, therefore, personalize your application and refer to a specific contact name within your message. Also, right from the start, you should be addressing the client on an empathetic level where you are showing your genuine willingness to assist them with their project.</p>
<p>The best way to show your dedication to results and to the needs of the client, is to create an <a href="https://speckyboy.com/2015/08/06/simple-ways-you-can-improve-your-communication-with-clients/">open field of communication</a> in order to ensure that the client has complete transparency in your service. If you think there are aspects of the project that are unfeasible, then notify the client in your application and signify your willingness to propose other alternative solutions via email or on the phone.</p>
<p><img style="width: 500px; height:246px;" src="/media/1010/perfect-project-pitch-a-02.jpg?width=500&amp;height=246" alt="" rel="1135" data-id="1135" /></p>
<h2>Convincing the Client</h2>
<p>Sometimes, no matter the professionalism of your approach to the customer, potential clients are much more likely to be convinced of your expertise if you offer them a <a href="https://speckyboy.com/tips-for-creating-a-first-class-personal-portfolio/">portfolio of your skills</a> and previous work. However, make sure that your portfolio is characterized by these aspects:</p>
<ul>
<li>Make your portfolio as diverse as possible and include a broad range of previous projects. For example, include a mixture of sites on which you have worked upon including eCommerce, social and private websites.</li>
<li>Include <a href="https://speckyboy.com/2013/06/11/asking-for-client-testimonials/">testimonies from previous satisfied clients</a> within your portfolio. This will bring a human factor to your work as the potential client will be able to trust the word of others who vouch for your skills.</li>
<li>Include certificates and other examples of your hard earned qualifications. This will also help to assure the client of your technical skills in the required field.</li>
</ul>
<h2>Conclusion</h2>
<p>All in all, you need to convince the client that you are willing to be a collaborative partner and a guiding professional for their project. You need to display your willingness to assist, advise and most importantly deliver every step along the way, and that you will bring your passion and dedication to making their project a success.</p>
<p>This entails you going above and beyond to signal your suitability for the job, and if this means taking more time to personalize your offer, then this will not be time wasted when you find yourself with a satisfied customer offering their project to you.</p>]]></projectContents>
        <projectStatus><![CDATA[Underdevelopment]]></projectStatus>
        <projectTitle><![CDATA[Creating the Perfect Project Pitch]]></projectTitle>
      </projectsItem>
      <projectsItem id="1093" key="6a0454a3-9064-4168-96a6-351258a228aa" parentID="1083" level="3" creatorID="0" sortOrder="1" createDate="2016-09-16T10:45:10" updateDate="2016-10-12T21:26:01" nodeName="Manageable Web Project Cost Estimates" urlName="manageable-web-project-cost-estimates" path="-1,1060,1083,1093" isDoc="" nodeType="1076" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1075" nodeTypeAlias="projectsItem">
        <umbracoNaviHide>0</umbracoNaviHide>
        <projectContents><![CDATA[<p>Landing a new client is one of the great joys of being a freelance designer. It means finally taking on an exciting paid project and also putting food on the table. That said, figuring out what the new project entails and just how much food will be on your table can be a <a href="https://speckyboy.com/working-freelance-really-worth/">frustrating mess</a>.</p>
<p>Yes, I’m talking about creating cost estimates for your prospective clients. It’s a vitally important task. On one hand, you’ll want to make sure that the estimate will cover everything the client needs. On the other, you will need to protect yourself against any unforeseen challenges in the project.</p>
<p>So, how do you create an estimate that will satisfy all parties?</p>
<p><img style="width: 500px; height:214.28571428571428px;" src="/media/1006/freelance_estimates_01.jpg?width=500&amp;height=214.28571428571428" alt="" rel="1131" data-id="1131" /></p>
<h2>Learn the Details</h2>
<p>Your first task is to become more of a research scientist than web professional. This means finding out more than just a rough overview of the project. A small detail can quickly become a big deal when creating a website.</p>
<p>Find out as much as you can regarding what your client’s expectations are for how things should work and behave. Ask if there are any sites out there with similar functionality. They may be able to tell you what they do and don’t like about them. That can help you determine what needs to be done.</p>
<h2>Choose a Path</h2>
<p>Once you have as many details as possible, you can then decide on a path for the project. For example, you may determine that the site should <a href="https://speckyboy.com/category/wordpress/">run on WordPress</a> or some other content management system (CMS).</p>
<p>From there, there may be other plugins or custom development required. And, let’s not forget about hosting requirements. Be sure to include the cost of any software or services in your estimate.</p>
<p><img style="width: 500px; height:214.28571428571428px;" src="/media/1007/freelance_estimates_02.jpg?width=500&amp;height=214.28571428571428" alt="" rel="1132" data-id="1132" /></p>
<h2>Determine a Timeline</h2>
<p>Estimate how long the project will take and if you will be able to <a href="https://speckyboy.com/2016/06/09/managing-multiple-websites-clients/">meet any deadlines</a> the client has set. If you don’t believe that the client’s timeline is reasonable, explain it to them and have data to back up your claim. Most clients will want the job done right and will understand if that means adjusting the launch date to ensure quality.</p>
<p>The timeline is also crucial in determining the price of a project. If the client needs to have the project delivered in a very short amount of time (relative to its size and scope), then you need to charge accordingly.</p>
<h2>Additional Help</h2>
<p>If this is a particularly large project or one that requires skills you don’t quite possess, you may need to outsource specific tasks to a trusted vendor.</p>
<p>It is advisable to review the project with vendors to get an idea of how much they will charge for their expertise. This way you’ll be able to charge your client accordingly and avoid a situation where you end up losing money.</p>
<h2>Stay Flexible</h2>
<p>This may be the hardest part of creating estimates. When I talk about flexibility, we’re talking about factoring in unexpected time and technical issues into the cost of a project. After all, it’s rare that any type of web project will take exactly the amount of time that you anticipate. This is where we web professionals often lose out.</p>
<p>Think of your initial estimate for putting together a site/design/application as a bit of wishful thinking. Confident as you are, it’s easy to believe that implementing that jQuery script will go smoothly or that importing data from the client’s old Drupal site to WordPress will go off without a hitch.</p>
<p>The reality of my past experiences tells you to think differently.</p>
<p>That’s why building in a bit of a “buffer zone” is a good idea. The idea is not to overcharge the client (good businesspeople don’t do that) but to simply account for those extra hiccups that happen along the way. Charge for a little more time than you think you’ll need, because most likely you <em>will</em> need it.</p>
<p>If you happen to deliver the project with time to spare, you could always throw in something extra features or support to even things out.</p>
<p><img style="width: 500px; height:214.28571428571428px;" src="/media/1008/freelance_estimates_03.jpg?width=500&amp;height=214.28571428571428" alt="" rel="1133" data-id="1133" /></p>
<h2>Spell it Out</h2>
<p>Last but not least, be sure to let the client know exactly what is and isn’t included in your estimate.</p>
<p>We’ve all had clients who, in the middle of a project, decide on <a href="https://speckyboy.com/2016/04/12/7-things-every-web-designer-dreads-hear-clients/">adding new bells and whistles</a> that can completely throw off your profit margin (not to mention your timeline).</p>
<p>It’s best to let them know up front that additional items like this are outside of the original scope of the project. Kindly explain that you’ll be glad to add new feature requests into the mix, but it will incur an extra cost.</p>
<h2>The Bottom Line</h2>
<p>There are just so many things to think of when creating estimates. It’s easy to make mistakes (I’ve made more than my share).</p>
<p>The key is to gather as much information as you possibly can before committing to a price. Then be honest with both the client and yourself regarding what it will take to deliver on the project. Keeping the full requirements of the project in mind will help you provide honest and accurate estimates and ensure you are getting paid exactly <a href="https://speckyboy.com/2016/06/07/educating-clients-true-value-services-designer/">what your services are worth</a></p>]]></projectContents>
        <projectStatus><![CDATA[Completed]]></projectStatus>
        <projectTitle><![CDATA[Create Manageable Web Project Cost Estimates]]></projectTitle>
      </projectsItem>
      <projectsItem id="1094" key="b435cf62-97a2-464d-b6f5-f835f577b387" parentID="1083" level="3" creatorID="0" sortOrder="2" createDate="2016-09-16T10:45:39" updateDate="2016-10-12T21:31:51" nodeName="Both Worlds &amp;Material Design" urlName="both-worlds-material-design" path="-1,1060,1083,1094" isDoc="" nodeType="1076" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1075" nodeTypeAlias="projectsItem">
        <umbracoNaviHide>0</umbracoNaviHide>
        <projectContents><![CDATA[<p>Material Design has become a popular topic of discussion in the design community of late. And we’re starting to see it implemented in sites across the web.</p>
<p>The trouble is, Material Design is a concept that can seem a bit complicated to understand. There’s also the problem of figuring out how to use elements of it in our own designs.</p>
<p>That’s why it’s so refreshing to see <a rel="nofollow" href="http://mdbootstrap.com/material-design-for-bootstrap/?utm_source=SB-I-X_link1&amp;utm_medium=SP-SB-I-IX&amp;utm_campaign=SpeckyBoy1-IX" target="_blank">Material Design for Bootstrap</a> – a powerful and free Material Design UI kit. They have combined the power of Material Design with the familiarity of the Bootstrap front-end framework. With it, you now have the ability to add Material Design elements to your website using an existing (and very popular) tool.</p>
<p><img style="width: 500px; height:227.2248551869405px;" src="/media/1011/updatepro-min-1.jpg?width=500&amp;height=227.2248551869405" alt="" rel="1136" data-id="1136" /></p>
<h2>So, what is Material Design?</h2>
<p>Developed by Google, Material Design is a “visual language” that aims to create a consistent user experience across platforms and devices. Not only that, it seeks to bring many of the principles of good design that we’ve seen in print publications for years to the web.</p>
<p>Simply put, Material Design exists to make the user’s experience as clear and consistent as possible. Let’s take a look at some key concepts:</p>
<ul>
<li>Provide <strong>visual cues</strong> to help users quickly understand how to interact with your website.</li>
<li>Use elements such as whitespace, color and typography to create <strong>hierarchy, meaning </strong>and<strong> focus</strong>.</li>
<li>Use <strong>motion</strong> in a meaningful and appropriate way to enhance user actions.</li>
<li>Material Design is a <strong>3-D environment</strong>, so use of shadows and ambient lighting are important for creating depth.</li>
</ul>
<p>Now that you know some of the basics, you may want to further explore the <a href="https://material.google.com/" target="_blank">details</a> with regards to Material Design.</p>
<h2>What’s Bootstrap?</h2>
<p>Bootstrap, created by Twitter, is an open source front-end framework that combines HTML, CSS and JS to help you create responsive, mobile-first websites. It’s built to work on all types of devices and screen sizes.</p>
<p>It comes loaded with lots of UI elements, jQuery plugins and custom HTML and CSS components. This helps you provide a consistent experience for users sound familiar?</p>
<p>Bootstrap has become extremely popular over the years and can be used in combination with static sites, along with WordPress or other content management systems.</p>
<h2>Material Design for Bootstrap Brings it All Together</h2>
<p>With <a href="http://mdbootstrap.com/material-design-for-bootstrap/?utm_source=SB-I-X_link4&amp;utm_medium=SP-SB-I-IX&amp;utm_campaign=SpeckyBoy1-IX" target="_blank">Material Design for Bootstrap</a>, you’re getting the best of both worlds. You’ll be able to use the rapid design qualities of Bootstrap to create a website that follows Google’s Material Design principles. It’s all built right in to the kit!</p>
<p>Included with Material Design for Bootstrap you’ll get:</p>
<ul>
<li><strong>HTML, CSS, SASS</strong> and <strong>JS</strong> files</li>
<li><strong>Detailed Documentation</strong></li>
<li><strong>Over 400 Components</strong> including a wide array of buttons, cards, image overlays, ecommerce components, form elements, lightboxes, carousels, blog components, animations, charts, image effects, modals, navigation and much more.</li>
<li><strong>Useful Pre-Built Sections</strong> including blog listings, contact pages, best-seller layouts, pricing tables, featured content layouts, intros, magazine-style newsfeeds, project listings, staff listings and testimonials.</li>
<li><strong>Templates</strong> including beautiful layouts for pages with full-width videos, carousels, various grid layouts, blog templates, landing pages, ecommerce pages and more.</li>
</ul>
<p>If you’d like even more outstanding features, Material Design for Bootstrap Pro provides you with over 2,000 components, 40 sections and more than 20 templates. All of that comes with premium support.</p>
<h2>Download Your Free Copy of Material Design for Bootstrap</h2>
<p><img style="width: 500px; height:227.2248551869405px;" src="/media/1013/newsmdb4screen-min.jpg?width=500&amp;height=227.2248551869405" alt="" rel="1138" data-id="1138" /></p>
<p>If you are among the many designers and developers already using Bootstrap for rapid development, then it’s worth adding <a href="http://mdbootstrap.com/material-design-for-bootstrap/?utm_source=SB-I-X_link6&amp;utm_medium=SP-SB-I-IX&amp;utm_campaign=SpeckyBoy1-IX" target="_blank">Material Design for Bootstrap</a> to your toolbox. The fact that you can use a familiar process for adding a new technology like Material Design is just too good to pass up.</p>
<p>If you’re not very familiar with web development, the guys from Material Design for Bootstrap have <a rel="nofollow" href="http://mdbootstrap.com/bootstrap-tutorial/?utm_source=SB-I-X_link-tutorial&amp;utm_medium=SP-SB-I-IX&amp;utm_campaign=SpeckyBoy1-IX" target="_blank">written an in-depth tutorial</a> for beginners that will show you how to easily create stunning websites in no time. And if that’s still too much for you, there are also a <a rel="nofollow" href="http://mdbootstrap.com/templates/?utm_source=SB-I-X_link-templates&amp;utm_medium=SP-SB-I-IX&amp;utm_campaign=SpeckyBoy1-IX" target="_blank">number of pre-made templates available</a>, both free and premium, that will you help you get your next web project launched quicker.</p>
<p>Not using Bootstrap or Material Design yet? You’ll want to check out this UI kit to see what all the fuss is about.</p>
<p>Grab your free copy of <a rel="nofollow" href="http://mdbootstrap.com/material-design-for-bootstrap/?utm_source=SB-I-X_link7&amp;utm_medium=SP-SB-I-IX&amp;utm_campaign=SpeckyBoy1-IX" target="_blank">Material Design for Bootstrap</a> today and start utilizing the many benefits of these two very popular technologies.</p>]]></projectContents>
        <projectStatus><![CDATA[Completed]]></projectStatus>
        <projectTitle><![CDATA[Combine the Best of Both Worlds with Material Design for Bootstrap]]></projectTitle>
      </projectsItem>
      <projectsItem id="1095" key="4c34fcbf-80ce-4b39-905c-d3c11395dd11" parentID="1083" level="3" creatorID="0" sortOrder="3" createDate="2016-09-16T10:46:16" updateDate="2016-10-12T21:36:23" nodeName="Modular JavaScript Projects with RequireJS" urlName="modular-javascript-projects-with-requirejs" path="-1,1060,1083,1095" isDoc="" nodeType="1076" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1075" nodeTypeAlias="projectsItem">
        <umbracoNaviHide>0</umbracoNaviHide>
        <projectContents><![CDATA[<p><span>With so much emphasis being laid upon providing a smoothly flowing User Experience in any web project, the client side codebase is now a very considerable chunk of the overall codebase. However, this opens up a host of problems with managing dependencies in the JavaScript code base. In this article, we will look at the usage of </span><strong>RequireJS</strong><span>, which makes these dependencies easier to manage, and as a result, less soupy code. Mmmm… soup!</span></p>
<p><span><img style="width: 500px; height:183.33333333333334px;" src="/media/1014/requirejs.jpg?width=500&amp;height=183.33333333333334" alt="" rel="1139" data-id="1139" /></span></p>
<p> </p>
<h5>Dependencies Shependencies</h5>
<p>JavaScript dependencies are, quite simply put, pieces of external JavaScript code which are required for a particular script to work on a web page. These may be classified into known libraries like jQuery or Backbone, or developer file(s), which might be created for a number of reasons. Let’s take a small example.</p>
<p>Let us consider a small web app with a folder structure like this:</p>
<ul>
<li><strong>myApp</strong>
<ul>
<li>js</li>
<li>lib
<ul>
<li>jQuery.js</li>
</ul>
</li>
<li>app
<ul>
<li>Customer.js</li>
<li>Bill.js</li>
</ul>
</li>
<li>css</li>
<li>php</li>
<li>images</li>
<li>index.php</li>
</ul>
</li>
</ul>
<p>Let us also see what is inside the JavaScript files.</p>
<p><strong>Customer.js:</strong></p>
<pre class="prettyprint prettyprinted"><span class="kwd">function</span><span class="pln"> getCustomer</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
		</span><span class="kwd">return</span><span class="pln"> </span><span class="str">"Ashwin"</span><span class="pun">;</span><span class="pln">
	</span><span class="pun">}</span></pre>
<p><strong>Bill.js:</strong></p>
<pre class="prettyprint prettyprinted"><span class="kwd">function</span><span class="pln"> generateBill</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
		</span><span class="kwd">var</span><span class="pln"> customer </span><span class="pun">=</span><span class="pln"> getCustomer</span><span class="pun">();</span><span class="pln">
		console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">"The bill for customer "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> customer </span><span class="pun">+</span><span class="pln"> </span><span class="str">" is 100.00"</span><span class="pun">);</span><span class="pln">
	</span><span class="pun">}</span></pre>
<p>As you can see, Bill.js refers to Customer.js for its functionality. Which means, that when including these script files into our HTML/PHP file(s), it is absolutely necessary for Customer.js to be included BEFOREBill.js</p>
<p>Let us take a look at how our script tags would work.</p>
<p><strong>Script tags:</strong></p>
<pre class="prettyprint prettyprinted"><span class="com">&lt;!--load jQuery--&gt;</span><span class="pln">
</span><span class="tag">&lt;script</span><span class="pln"> </span><span class="atn">src</span><span class="pun">=</span><span class="pln"> </span><span class="atv">"/js/lib/jQuery.js"</span><span class="tag">&gt;&lt;/script&gt;</span><span class="pln">

</span><span class="com">&lt;!--load the customer--&gt;</span><span class="pln">
</span><span class="tag">&lt;script</span><span class="pln"> </span><span class="atn">src</span><span class="pun">=</span><span class="pln"> </span><span class="atv">"/js/app/Customer.js"</span><span class="tag">&gt;&lt;/script&gt;</span><span class="pln">

</span><span class="com">&lt;!--load the bill--&gt;</span><span class="pln">
</span><span class="tag">&lt;script</span><span class="pln"> </span><span class="atn">src</span><span class="pun">=</span><span class="pln"> </span><span class="atv">"/js/app/Bill.js"</span><span class="tag">&gt;&lt;/script&gt;</span></pre>
<p>Now, when generateBill() is called from anywhere inside this file, it will work.</p>
<p>As you can see, Bill.js refers to Customer.js for its functionality. Which means, that when including these script files into our HTML/PHP file(s), it is absolutely necessary for Customer.js to be included BEFOREBill.js</p>
<p>Let us take a look at how our script tags would work.</p>
<h5>Oh God, There’s Blood Everywhere!</h5>
<p>So, what happens if we misplace the order of the script files?</p>
<p>After the files are loaded, with Bill.js loading before Customer.js,generateBill() will fail with this error [This error is from Google Chrome. Other browsers may not display the same text]</p>
<pre class="prettyprint prettyprinted"><span class="typ">ReferenceError</span><span class="pun">:</span><span class="pln"> getCustomer </span><span class="kwd">is</span><span class="pln"> </span><span class="kwd">not</span><span class="pln"> </span><span class="kwd">defined</span></pre>
<p>It may be easy to keep track of small projects comprising of a few files only, but managing the same for large projects, with tens of developer files as well as JS libraries, it becomes a real pain in the cojones. Team leads are known to pull out their hair when previously working code breaks due to dependency issues. This is where <strong>RequireJS</strong> comes in extremely handy.</p>
<h5>Cleaning Up</h5>
<p><strong>RequireJS</strong> is a dependency loader which works on the Asynchronous Module Definition (AMD) API. Every module is loaded independently and asynchronously, and then connected to its dependencies before being made available for usage.</p>
<p>To start with <strong>RequireJS</strong>, we will download require.js from<a href="http://requirejs.org/">http://requirejs.org</a> and place it inside our lib folder. We will also create another file called main.js and place it in the app folder. The structure should look like this:</p>
<ul>
<li><strong>myApp</strong>
<ul>
<li>js</li>
<li>lib
<ul>
<li>jQuery.js</li>
<li>require.js</li>
</ul>
</li>
<li>app
<ul>
<li>Customer.js</li>
<li>Bill.js</li>
<li>main.js</li>
</ul>
</li>
<li>css</li>
<li>php</li>
<li>images</li>
<li>index.php</li>
</ul>
</li>
</ul>
<p>Next, we will remove all the existing script tags from our page, and only use this one</p>
<pre class="prettyprint prettyprinted"><span class="tag">&lt;script</span><span class="pln"> </span><span class="atn">data-bind</span><span class="pun">=</span><span class="pln"> </span><span class="atv">"js/app/main.js"</span><span class="pln"> </span><span class="atn">src</span><span class="pun">=</span><span class="pln"> </span><span class="atv">"js/lib/require.js"</span><span class="tag">&gt;&lt;/script&gt;</span></pre>
<p>Before delving into what main.js contains, let us take a look at what is happening in this particular tag.<strong>RequireJS</strong> makes use of the HTML5 data attribute, in this case, coming into play as data-bind. What is passed to this attribute is the path to the file where the dependency conditions and configuration is done. In essence, main.js is the entry point to our scripts.</p>
<p>Now, we can take a look at main.js.</p>
<p><strong>Main.js:</strong></p>
<pre class="prettyprint prettyprinted"><span class="pln">requirejs</span><span class="pun">.</span><span class="pln">config</span><span class="pun">({</span><span class="pln">
	baseUrl </span><span class="pun">:</span><span class="pln"> </span><span class="str">'js/lib'</span><span class="pun">,</span><span class="pln">
	paths </span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
		</span><span class="str">'App'</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">'../app'</span><span class="pln">
	</span><span class="pun">}</span><span class="pln">
</span><span class="pun">});</span><span class="pln">

requirejs</span><span class="pun">([</span><span class="str">'App/Bill'</span><span class="pun">],</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">bill</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	bill</span><span class="pun">.</span><span class="pln">generateBill</span><span class="pun">();</span><span class="pln">
</span><span class="pun">});</span></pre>
<p>First off, we configure <strong>RequireJS</strong>, by telling it to consider all files inside the js/lib folder to be included by default. This is very good for loading libraries, is done by configuring the baseUrl. Next, we set the paths of our own modules, contained inside the js/app folder. However, the paths parameter contains paths relative to the baseUrl, so care must be taken in that aspect.</p>
<p>After the configuration is done, we simply invoke the constructor of<strong>RequireJS</strong> with the modules we want to use, and the variables corresponding to those modules. These, work in the following way.</p>
<p><strong>For developer modules:</strong></p>
<pre class="prettyprint prettyprinted"><span class="pln">requirejs</span><span class="pun">([</span><span class="str">'PathName/CaseSensitiveFileNameWithoutExtension'</span><span class="pun">],</span><span class="pln"> 
	</span><span class="kwd">function</span><span class="pun">(</span><span class="typ">SomeVar</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{});{/</span><span class="pln">javascript</span><span class="pun">]</span><span class="pln">

</span><span class="str">&lt;p&gt;&lt;strong&gt;</span><span class="typ">For</span><span class="pln"> libraries</span><span class="pun">,</span><span class="pln"> once </span><span class="str">&lt;code&gt;</span><span class="pln">baseUrl</span><span class="pun">&lt;</span><span class="str">/code&gt; is included:&lt;/</span><span class="pln">strong</span><span class="pun">&gt;&lt;/</span><span class="pln">p</span><span class="pun">&gt;</span><span class="pln">

</span><span class="pun">&lt;</span><span class="pln">pre </span><span class="kwd">class</span><span class="pun">=</span><span class="str">"prettyprint"</span><span class="pun">&gt;</span><span class="pln">requirejs</span><span class="pun">([</span><span class="str">'CaseSensitiveFileNameWithoutExtension'</span><span class="pun">],</span><span class="pln"> 
	</span><span class="kwd">function</span><span class="pun">(</span><span class="typ">SomeVar</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{});</span></pre>
<p>These may be mixed and matched to whatever the developer wants to use inside main.js</p>
<p>For example, the following code is perfectly valid:</p>
<pre class="prettyprint prettyprinted"><span class="pln">requirejs</span><span class="pun">([</span><span class="str">'App/Bill'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'jQuery'</span><span class="pun">],</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">bill</span><span class="pun">,</span><span class="pln"> $</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{});</span></pre>
<h5>The Great Migration</h5>
<p>Just writing a main.js and adding require.js is not enough to convert this simple app to a format recognized by <strong>RequireJS</strong>. So, we are going to change a few things.</p>
<p><strong>Customer.js:</strong></p>
<pre class="prettyprint prettyprinted"><span class="pln">define</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	</span><span class="kwd">return</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
		getCustomer </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="str">"Ashwin"</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
	</span><span class="pun">}</span><span class="pln">
</span><span class="pun">});</span></pre>
<p><strong>Bill.js:</strong></p>
<pre class="prettyprint prettyprinted"><span class="pln">define</span><span class="pun">([</span><span class="str">'./Customer'</span><span class="pun">],</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">customer</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	</span><span class="kwd">return</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
		generateBill </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
			</span><span class="kwd">var</span><span class="pln"> c </span><span class="pun">=</span><span class="pln"> customer</span><span class="pun">.</span><span class="pln">getCustomer</span><span class="pun">();</span><span class="pln">
			console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">"The bill for customer "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> c </span><span class="pun">+</span><span class="pln"> </span><span class="str">" is 100.00"</span><span class="pun">);</span><span class="pln">
		</span><span class="pun">}</span><span class="pln">
	</span><span class="pun">}</span><span class="pln">
</span><span class="pun">});</span></pre>
<p>What we are essentially doing in these files are just encasing them inside a define function, which will notify <strong>RequireJS</strong> that these are independent modules and are defined as such. Any dependent module(s) will also be called in the same way as with the <strong>RequireJS</strong>constructor.</p>
<p>However, there is a big difference between the constructor and the define methods. The define method just makes a module available on demand, while the constructor immediately loads the needed modules. This difference goes a long way to determine how every application's dependencies are defined.</p>
<h5>Conclusion</h5>
<p>By creating a supply of independent modules which can be loaded on demand, we have completely removed the mess caused earlier. With a very simple usage, and the utility it brings to the table, <strong>RequireJS</strong> is becoming a must have for any medium to large JavaScript project. Our code is now more modular, meaning it can now be easily reused and clean enough to put Dexter at shame.</p>
<p>I hope this article initiated you nicely into <strong>RequireJS</strong> and will help budding as well as experienced developers.</p>
<p>For more information on <strong>RequireJS</strong> and advanced usage, please refer to <a href="http://requirejs.org/docs/api.html" target="_blank"><strong>http://requirejs.org/docs.api.html</strong></a></p>
<p> </p>
<p> </p>]]></projectContents>
        <projectStatus><![CDATA[Completed]]></projectStatus>
        <projectTitle><![CDATA[Building Modular JavaScript Projects with RequireJS]]></projectTitle>
      </projectsItem>
    </projectsMain>
    <textPage id="1092" key="b803b2a5-521c-4a58-a4f2-460f430c7a99" parentID="1060" level="2" creatorID="0" sortOrder="3" createDate="2016-09-11T18:18:22" updateDate="2016-10-12T21:13:56" nodeName="About" urlName="about" path="-1,1060,1092" isDoc="" nodeType="1058" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1057" nodeTypeAlias="textPage">
      <umbracoNaviHide>0</umbracoNaviHide>
      <textPageGrid><![CDATA[{
  "name": "Full page text page layout",
  "sections": [
    {
      "grid": 12,
      "allowAll": true,
      "rows": [
        {
          "name": "Three columns layout",
          "areas": [
            {
              "grid": 12,
              "allowAll": false,
              "allowed": [
                "headline"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": "About Us",
                  "editor": {
                    "alias": "headline"
                  },
                  "active": false
                }
              ]
            },
            {
              "grid": 12,
              "allowAll": false,
              "allowed": [
                "media"
              ],
              "hasConfig": false,
              "controls": []
            },
            {
              "grid": 12,
              "allowAll": false,
              "allowed": [
                "rte"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": "<div class=\"mceContentBody\">\n<p><strong>AWD </strong>was launched as a small inspirational site for web designers. </p>\n<p>Based in the small, but beautiful, Denish city of <a href=\"https://www.google.com/maps/place/Inverness,+Highland,+UK/@57.4679963,-4.2218578,13z/data=!3m1!4b1!4m2!3m1!1s0x488f715b2d17de2b:0x624309d12e3ec43d\">Inverness</a> and supported by a remote team of writers and editors, we publish insightful tutorials and tips, time-saving techniques and resources, and share inspirational UI designs. We cover web and mobile app design, UX design, graphic design, and even the occasional Lego post. We love to showcase the best and most innovative web design styles, keep you up to date with the latest in current web and mobile design trends <strong>You’re going to love us!</strong></p>\n</div>",
                  "editor": {
                    "alias": "rte"
                  },
                  "active": false
                }
              ],
              "active": false
            },
            {
              "grid": 4,
              "allowAll": false,
              "allowed": [
                "rte"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": "<h2>Vision</h2>\n<p>At <strong>AWD</strong> we write insightful tutorials and time-saving techniques, we share the latest and most innovative design resources, and love to showcase inspirational UI designs. We predominantly cover web and mobile app design, WordPress, UX design and graphic design, but from time-to-time, we do publish the occasional Lego post as well.</p>\n<p>Our readers range from web and mobile designers, UX designers, web developers, graphic designers, photographers, bloggers…. and so much more.</p>\n<p> </p>",
                  "editor": {
                    "alias": "rte"
                  },
                  "active": true
                }
              ],
              "hasActiveChild": true,
              "active": true
            },
            {
              "grid": 4,
              "allowAll": false,
              "allowed": [
                "rte"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": "<h2>People</h2>\n<h4><span>Mr. Boss </span>- Editor</h4>\n<p>Mr. Boss is the founder and editor of WDA. </p>\n<h4>Mr. Big - Technical Officer</h4>\n<p>Mr. Big is our Chief Technical Officer.</p>\n<h4>Mrs. Small - Editor &amp; Writer</h4>\n<p>Mrs. Small <span> writes for multiple publications.</span></p>",
                  "editor": {
                    "alias": "rte"
                  },
                  "active": false
                }
              ]
            },
            {
              "grid": 4,
              "allowAll": false,
              "allowed": [
                "rte"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": "<h2>Skills</h2>\n<p> </p>\n<p>Editor has many years experience within the web design industry and has a passion for the latest web technologies, current design trends, and loves WordPress, Star Wars and Lego.</p>\n<p>Technical Officer has been working with technology since 1989. He has held positions in global, multi-national and national companies in IT departments. Andy excels in server configurations, firewalls and security, coding for both front &amp; back-end,infrastructure architecture and working with WordPress.</p>\n<p>Editor &amp; Writer's <span>primary areas of interest include open source, mobile development, web CMS and vector art.</span></p>",
                  "editor": {
                    "alias": "rte"
                  },
                  "active": false
                }
              ]
            }
          ],
          "hasConfig": false,
          "id": "53dd4099-346e-1906-8e60-5cc25dbc51ed",
          "hasActiveChild": true,
          "active": true
        }
      ]
    }
  ]
}]]></textPageGrid>
    </textPage>
    <contactPage id="1098" key="2f378c96-f906-4bad-9d3d-45ec24e6e265" parentID="1060" level="2" creatorID="0" sortOrder="4" createDate="2016-09-19T09:17:13" updateDate="2016-09-19T09:17:13" nodeName="Contact Us" urlName="contact-us" path="-1,1060,1098" isDoc="" nodeType="1097" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1096" nodeTypeAlias="contactPage" />
    <textPage id="1112" key="bcb7c915-632f-45a6-bfb7-3ffbf2e3662f" parentID="1060" level="2" creatorID="0" sortOrder="6" createDate="2016-09-26T10:58:02" updateDate="2016-09-26T10:58:47" nodeName="Login" urlName="login" path="-1,1060,1112" isDoc="" nodeType="1058" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1108" nodeTypeAlias="textPage">
      <textPageGrid><![CDATA[{
  "name": "Full page text page layout",
  "sections": [
    {
      "grid": 12,
      "allowAll": true,
      "rows": [
        {
          "name": "Three columns layout",
          "areas": [
            {
              "grid": 12,
              "allowAll": false,
              "allowed": [
                "headline"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": null,
                  "editor": {
                    "alias": "headline"
                  },
                  "active": false
                }
              ]
            },
            {
              "grid": 12,
              "allowAll": false,
              "allowed": [
                "media"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": null,
                  "editor": {
                    "alias": "media"
                  },
                  "active": false
                }
              ]
            },
            {
              "grid": 12,
              "allowAll": false,
              "allowed": [
                "rte"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": "",
                  "editor": {
                    "alias": "rte"
                  },
                  "active": false
                }
              ]
            },
            {
              "grid": 4,
              "allowAll": false,
              "allowed": [
                "rte"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": "",
                  "editor": {
                    "alias": "rte"
                  },
                  "active": false
                }
              ]
            },
            {
              "grid": 4,
              "allowAll": false,
              "allowed": [
                "rte"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": "",
                  "editor": {
                    "alias": "rte"
                  },
                  "active": false
                }
              ]
            },
            {
              "grid": 4,
              "allowAll": false,
              "allowed": [
                "rte"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": "",
                  "editor": {
                    "alias": "rte"
                  },
                  "active": false
                }
              ]
            }
          ],
          "hasConfig": false,
          "id": "8ef174c1-352d-05ca-b2ea-120a6110f486"
        }
      ]
    }
  ]
}]]></textPageGrid>
    </textPage>
    <textPage id="1113" key="f0cf8a24-47ad-4af0-8bfe-e45aad21b21c" parentID="1060" level="2" creatorID="0" sortOrder="7" createDate="2016-09-26T11:01:05" updateDate="2016-09-26T11:14:48" nodeName="Forbidden Access" urlName="forbidden-access" path="-1,1060,1113" isDoc="" nodeType="1058" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1057" nodeTypeAlias="textPage">
      <umbracoNaviHide>1</umbracoNaviHide>
      <textPageGrid><![CDATA[{
  "name": "Full page text page layout",
  "sections": [
    {
      "grid": 12,
      "allowAll": true,
      "rows": [
        {
          "name": "Three columns layout",
          "areas": [
            {
              "grid": 12,
              "allowAll": false,
              "allowed": [
                "headline"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": null,
                  "editor": {
                    "alias": "headline"
                  },
                  "active": false
                }
              ]
            },
            {
              "grid": 12,
              "allowAll": false,
              "allowed": [
                "media"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": null,
                  "editor": {
                    "alias": "media"
                  },
                  "active": false
                }
              ]
            },
            {
              "grid": 12,
              "allowAll": false,
              "allowed": [
                "rte"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": "",
                  "editor": {
                    "alias": "rte"
                  },
                  "active": false
                }
              ]
            },
            {
              "grid": 4,
              "allowAll": false,
              "allowed": [
                "rte"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": "",
                  "editor": {
                    "alias": "rte"
                  },
                  "active": false
                }
              ]
            },
            {
              "grid": 4,
              "allowAll": false,
              "allowed": [
                "rte"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": "",
                  "editor": {
                    "alias": "rte"
                  },
                  "active": false
                }
              ]
            },
            {
              "grid": 4,
              "allowAll": false,
              "allowed": [
                "rte"
              ],
              "hasConfig": false,
              "controls": [
                {
                  "value": "<p>For</p>",
                  "editor": {
                    "alias": "rte"
                  },
                  "active": false
                }
              ]
            }
          ],
          "hasConfig": false,
          "id": "aafd5bf4-bdc1-b5db-9e93-a8490226ef7f"
        }
      ]
    }
  ]
}]]></textPageGrid>
    </textPage>
    <messageBoard id="1116" key="b9e22373-7e1f-4d36-8d72-fad56f022997" parentID="1060" level="2" creatorID="0" sortOrder="8" createDate="2016-09-26T16:51:03" updateDate="2016-09-26T16:51:03" nodeName="Message Board" urlName="message-board" path="-1,1060,1116" isDoc="" nodeType="1115" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1114" nodeTypeAlias="messageBoard">
      <umbracoNaviHide>0</umbracoNaviHide>
      <message id="1127" key="d19fd270-022b-473a-9a58-4eace0eaee90" parentID="1116" level="3" creatorID="0" sortOrder="5" createDate="2016-10-12T15:13:10" updateDate="2016-10-12T15:13:10" nodeName="Natalia (4)" urlName="natalia-4" path="-1,1060,1116,1127" isDoc="" nodeType="1121" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="0" nodeTypeAlias="message">
        <messageName><![CDATA[Natalia]]></messageName>
        <messageMessage><![CDATA[Check umbraco m.a.]]></messageMessage>
      </message>
      <message id="1128" key="0f73c1dc-f4b1-4e14-bbc5-fcb526436c74" parentID="1116" level="3" creatorID="0" sortOrder="6" createDate="2016-10-12T15:20:24" updateDate="2016-10-12T15:20:24" nodeName="Natalia (5)" urlName="natalia-5" path="-1,1060,1116,1128" isDoc="" nodeType="1121" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="0" nodeTypeAlias="message">
        <messageName><![CDATA[Natalia]]></messageName>
        <messageMessage><![CDATA[Check umbraco m.a.]]></messageMessage>
      </message>
    </messageBoard>
    <members id="1119" key="b4ea44b1-a138-498f-9d89-62591fb96377" parentID="1060" level="2" creatorID="0" sortOrder="9" createDate="2016-09-26T18:22:19" updateDate="2016-09-26T18:22:19" nodeName="Members" urlName="members" path="-1,1060,1119" isDoc="" nodeType="1118" creatorName="Natalia Valgepea" writerName="Natalia Valgepea" writerID="0" template="1117" nodeTypeAlias="members">
      <umbracoNaviHide>0</umbracoNaviHide>
    </members>
  </homePage>
</root>